name: Build & Deploy Patient Service

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Patient Service
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup JDK 21 for Maven build
      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21

      # Step 3: Install dependencies and run unit tests
      - name: Unit Tests
        run: mvn -B test --file patient-service/pom.xml

      # Step 4: Build the application
      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file patient-service/pom.xml

      # Step 5: Build Docker Images using docker-compose
      - name: Build Docker Image for Patient Service
        run: |
          docker-compose -f patient-service.yml build

      # Step 6: Run Docker Compose to Start Containers (PostgreSQL and Patient Service)
      - name: Run Docker Compose
        run: |
          docker-compose -f patient-service.yml up -d

      # Step 7: Wait for PostgreSQL container to be ready
      - name: Wait for PostgreSQL
        run: |
          until docker exec patient-service-db pg_isready -U admin_user -d db; do
            echo "Waiting for database to be ready..."
            sleep 5
          done

      # Step 8: Run Post-Deployment Tasks
      - name: Run Post-Deployment Tasks
        run: |
          # Add any post-deployment tasks here, like API tests or health checks
          echo "Running post-deployment tasks..."

      # Step 9: Push Docker Image to Docker Hub (optional if you want to push to a registry)
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/patient-service:today .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/patient-service:today